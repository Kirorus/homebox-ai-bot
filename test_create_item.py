#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ HomeBox API
"""
import asyncio
import sys
import json

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append('.')

from homebox_api import HomeboxAPI
import config

async def test_create_item():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ HomeBox...")
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º API
        print("üì° –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API...")
        api = HomeboxAPI()
        
        # –ü–æ–ª—É—á–∞–µ–º –ª–æ–∫–∞—Ü–∏–∏
        print("üìç –ü–æ–ª—É—á–µ–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–π...")
        locations = await api.get_locations()
        if not locations:
            print('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ª–æ–∫–∞—Ü–∏–∏')
            return False
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –ª–æ–∫–∞—Ü–∏–π: {len(locations)}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ª–æ–∫–∞—Ü–∏–π
        print("\nüìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –ª–æ–∫–∞—Ü–∏–∏:")
        for i, location in enumerate(locations[:5]):
            print(f"  {i+1}. {location.get('name', '–ë–µ–∑ –∏–º–µ–Ω–∏')} (ID: {location.get('id', 'N/A')})")
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–≤—É—é –ª–æ–∫–∞—Ü–∏—é –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        test_location = locations[0]
        location_id = test_location['id']
        location_name = test_location.get('name', '–ë–µ–∑ –∏–º–µ–Ω–∏')
        
        print(f"\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ –≤ –ª–æ–∫–∞—Ü–∏–∏: {location_name}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞
        item_result = await api.create_item(
            name="Test Item API",
            description="–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API",
            location_id=str(location_id)
        )
        
        if 'error' in item_result:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞: {item_result['error']}")
            print(f"üîç –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: {api.last_error}")
            return False
        else:
            item_id = item_result.get('id')
            item_name = item_result.get('name', 'N/A')
            print(f"‚úÖ –ü—Ä–µ–¥–º–µ—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")
            print(f"   ID: {item_id}")
            print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {item_name}")
            return True
    
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    result = asyncio.run(test_create_item())
    if result:
        print("\nüéâ –¢–µ—Å—Ç –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\nüí• –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª")
